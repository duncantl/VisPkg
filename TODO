+ labels not positioned correctly in a pdf() graphics device. Too low so below the box

+ Rectangles rather than lines for the top-level types?  and remove the gaps between the lines/rectangles.
   + the can vectorize the color argument.

+ [check] Identify S3 generics - have to look in the body not just isFunAssign

+ Identify S3 methods - either from NAMESPACE, getNamespace() or based on names but not knowing what classes there are.
   + √ find NextMethod

+ [check] added name column to data.frame for top-level elements

+ allow mapping of colors in call or do we do this on the Toplevel

+ add legend for colored/top-level plot.
   + in separate are on side of plot or in the plot area.
   + part of showFiles.ToplevelTypeInfoList as a call to mkLegend.
```
ty = getToplevelTypes("~/GitWorkingArea/Rllvm/R")
plot(ty[!grepl("z_enum", names(ty))])
legend(1, .4, legend = names(TypeColorMap), fill = TypeColorMap)
```
```
plot(ty[!grepl("z_enum", names(ty))])
types = unique(unlist(lapply(ty, `[[`, "type")))
m = match(types, names(TypeColorMap))
legend(1, .4, legend = names(TypeColorMap)[m], fill = TypeColorMap[m])
```

+ allow ordering the rectangles by overall size of each file.
   + user can order them if they compute the information ahead of the call.
      showFiles(lnz[order(sapply(lnz, length))], cex = .7, lwd = 4, lend = 1, mar = 4); title("Rllvm", line = 3)
   + but order = TRUE/FALSE     

+ cex etc. for labels
   - take into account for computing margin.
   - √ passed to mkEmptyPlot()

+ Class hierarchies

+ Other "line" information measures
  - changes to lines
  
+ 2 plots above and below for many files.

+ Exporting information to JavaScript do display there.
 or htmlwidgets?...

+ √ lwd doesn't seem to work any more.
   - wasn't passing ... to drawLines() call in showFileOutlines() now that it is doing the drawing again.




When switching to rectangles.

 Nervous about making change and breaking things.
  copy file
  or use version control and branch
  make certain to commit any changes before branching

 + changes
    +  Change body of computeLineCoords to create 4-column rectangles.
       + No need for the NA rows - each line in the file is now a row in the matrix.
       +  Can draw rectangles with different colors in same call, i.e. vectorized in color.
    + change showFileELements to rep(color, nrow(coords)) not each = 3 as for the lines.
    + showFileOutlines - now calls rect() rather than drawLines().
    
  When very large file with lots of top-level elements, looks black even though rect(, col = tmp[[5]])
   really is a collection of colors.
   Drop the big files. See the rectangles.
   
   So for the big files, There are too many and all we see are the borders.
     So use border = NA to not draw the borders of the rectangles.

   + add border = NULL (default value for rect()) and pass this down from showFiles()/plot() to control how the rectangle borders are rendered.

